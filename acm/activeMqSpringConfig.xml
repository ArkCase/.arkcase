<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:amq="http://activemq.apache.org/schema/core" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.13.2.xsd">

    <!--*************************************************************************** -->
    <!-- ActiveMQ Configuration                                                     -->
    <!--*************************************************************************** -->

    <amq:broker id="broker" useJmx="false" persistent="true" deleteAllMessagesOnStartup="${ark.activemq.deleteAllMessagesOnStartup}"
        enableStatistics="true">
        <amq:persistenceAdapter>
            <amq:kahaDB directory="${user.home}/.arkcase/activemq"/>
        </amq:persistenceAdapter>

        <amq:destinationPolicy>
            <amq:policyMap>
                <amq:policyEntries>
                    <amq:policyEntry queue=">" deadLetterStrategy="discarding" advisoryWhenFull="true" advisoryForFastProducers="true"
                        memoryLimit="${ark.activemq.queueMemoryLimit}">
                        <amq:deadLetterStrategy>
                            <amq:discarding/>
                        </amq:deadLetterStrategy>
                    </amq:policyEntry>
                    <amq:policyEntry topic=">" deadLetterStrategy="discarding" advisoryWhenFull="true" advisoryForFastProducers="true"
                        memoryLimit="${ark.activemq.topicMemoryLimit}">
                        <amq:deadLetterStrategy>
                            <amq:discarding/>
                        </amq:deadLetterStrategy>
                    </amq:policyEntry>
                </amq:policyEntries>

            </amq:policyMap>
        </amq:destinationPolicy>

        <amq:systemUsage>

            <!-- NOTE Ensure the below limits are HIGHER than the memoryLimit in the destinationPolicy policyMap.
                                  Actually, the SUM of ALL the memoryLimit attributes in the policyMap must be LOWER than
                 the systemUsage memory limits.
            -->
            <amq:systemUsage>
                <!-- memory usage is for non_persistent messages - limit is on memory -->
                <amq:memoryUsage>
                    <amq:memoryUsage limit="${ark.activemq.memoryUsageLimit}"/>
                </amq:memoryUsage>
                <!-- storeUsage is for persistent messages - the limit is applied to disk space  -->
                <amq:storeUsage>
                    <amq:storeUsage limit="${ark.activemq.storeUsageLimit}"/>
                </amq:storeUsage>
                <!-- tempUsage is for temporary messages - limit is on disk space -->
                <amq:tempUsage>
                    <amq:tempUsage limit="${ark.activemq.tempUsageLimit}"/>
                </amq:tempUsage>
            </amq:systemUsage>
        </amq:systemUsage>

        <amq:plugins>
            <amq:timeStampingBrokerPlugin zeroExpirationOverride="60000" ttlCeiling="60000" futureOnly="false"/>
        </amq:plugins>

        <amq:transportConnectors>
            <amq:transportConnector uri="${ark.activemq.transportConnectorURI}"/>
        </amq:transportConnectors>

    </amq:broker>

    <!-- NOTE WHEN YOU SEE "This class is not trusted to be serialized as ObjectMessage payload" MESSAGES IN YOUR LOG FILE,
         UPDATE arkcase-activemq.properties TO INCLUDE THE RELEVANT PACKAGES IN THE ark.activemq.trustedPackages PROPERTY. -->

    <!-- this bean is just the string property from arkcase-activemq.properties -->
    <bean id="activeMqExtraTrustedPackages" class="java.lang.String">
        <constructor-arg value="${ark.activemq.trustedPackages}"/>
    </bean>
    <!-- Get a String array from that String -->
    <bean id="activeMqExtraTrustedPackageArray" factory-bean="activeMqExtraTrustedPackages" factory-method="split">
        <constructor-arg value=","/>
    </bean>
    <!-- get a List from that String array -->
    <bean id="activeMqExtraTrustedPackageList" class="java.util.Arrays" factory-method="asList">
        <constructor-arg ref="activeMqExtraTrustedPackageArray"/>
    </bean>
    <!-- this bean is the default list of trusted packages.  ActiveMQ will not work right without these packages. -->
    <bean id="activeMqTrustedPackages" class="java.util.ArrayList">
        <constructor-arg>
            <list>
                <value type="java.lang.String">org.mule</value>
                <value type="java.lang.String">java.lang</value>
                <value type="java.lang.String">javax.security</value>
                <value type="java.lang.String">java.util</value>
                <value type="java.lang.String">org.apache.activemq</value>
                <value type="java.lang.String">org.fusesource.hawtbuf</value>
                <value type="java.lang.String">com.thoughtworks.xstream.mapper</value>
            </list>
        </constructor-arg>
    </bean>
    <!-- add the List from the properties file to the default list.  NOTE: addAll returns a Boolean, and it modifies
         the callee in place.  So activeMqTrustedPackagesAddAllResult is actually a boolean... NOT a list. -->
    <bean id="activeMqTrustedPackagesAddAllResult" factory-bean="activeMqTrustedPackages" factory-method="addAll">
        <constructor-arg ref="activeMqExtraTrustedPackageList"/>
    </bean>

    <bean id="amqConnectionFactory" class="org.apache.activemq.spring.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${ark.activemq.transportConnectorURI}"/>
        <property name="watchTopicAdvisories" value="true"/>
        <property name="trustedPackages" ref="activeMqTrustedPackages"/>
    </bean>

    <bean id="jmsConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop" depends-on="broker">
        <property name="connectionFactory" ref="amqConnectionFactory"/>
        <property name="maxConnections" value="${ark.activemq.maxConnections}"/>
    </bean>

</beans>
