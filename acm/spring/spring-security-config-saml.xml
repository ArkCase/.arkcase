<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

    <!-- Enable auto-wiring -->
    <context:annotation-config />

    <!-- Scan for auto-wiring classes in spring saml packages -->
    <context:component-scan base-package="org.springframework.security.saml" />

    <!-- acmAuthenticationManager, acmLoginSuccessHandler, acmLogoutSuccessHandler, acmAuthenticationDetailsFactory, acmSamlAuthenticationCheckFilter,
        acmSamlRestAuthenticationCheckFilter, acmBasicAndTokenAuthenticationFilter, acmRestAuthenticationSuccessHandler, acmRestAuthenticationFailureHandler,
        acmRestAuthenticationEntryPoint are defined in spring-library-user-login.xml -->

    <!-- Ldap Entry Point authenticates users against LDP server for Ajax calls -->
    <http
        entry-point-ref="acmRestAuthenticationEntryPoint"
        use-expressions="true"
        request-matcher="regex"
        pattern="^/api/.*$|^/plugin/.*$|^/assets/.*$|^/custom_assets/.*$|^/directives/.*$|^/custom_directives/.*$|^/filters/.*$|^/modules/.*$|^/custom_modules/.*$|^/modules_config/.*$|^/services/.*$"
        authentication-manager-ref="acmAuthenticationManager">
        <intercept-url pattern="^/.*$" access="isAuthenticated()" requires-channel="https"/>
        <http-basic/>
        <custom-filter
            after="SECURITY_CONTEXT_FILTER"
            ref="acmSamlRestAuthenticationCheckFilter" />
        <custom-filter
            after="BASIC_AUTH_FILTER"
            ref="samlFilter" />
        <custom-filter
            ref="acmBasicAndTokenAuthenticationFilter"
            before="BASIC_AUTH_FILTER" />
        <custom-filter
            ref="corsFilter"
            after="PRE_AUTH_FILTER" />
        <form-login
            authentication-success-handler-ref="acmRestAuthenticationSuccessHandler"
            authentication-failure-handler-ref="acmRestAuthenticationFailureHandler" />
    </http>
    
    <!-- Saml Entry Point authenticates users against LDP server -->
    <http
        entry-point-ref="samlEntryPoint"
        auto-config="true"
        use-expressions="true"
        authentication-manager-ref="acmAuthenticationManager">
        <intercept-url
            pattern="/**"
            access="isAuthenticated()" 
            requires-channel="https" />
        <custom-filter
            after="SECURITY_CONTEXT_FILTER"
            ref="acmSamlAuthenticationCheckFilter" />
        <custom-filter
            before="FIRST"
            ref="metadataGeneratorFilter" />
        <custom-filter
            after="BASIC_AUTH_FILTER"
            ref="samlFilter" />
        <custom-filter
            ref="acmBasicAndTokenAuthenticationFilter"
            before="BASIC_AUTH_FILTER" />
        <custom-filter
            ref="corsFilter"
            after="PRE_AUTH_FILTER" />
        <session-management invalid-session-url="/sso/loggedout">
            <!--this will throw error to 3rd login attempt -->
            <!--<concurrency-control max-sessions="3" error-if-maximum-exceeded="true" /> -->
        </session-management>
    </http>

    <!-- Entry point to initialize SAML authentication, default values taken from properties file -->
    <beans:bean
        id="samlEntryPoint"
        class="org.springframework.security.saml.SAMLEntryPoint">
        <beans:property name="defaultProfileOptions">
            <beans:bean class="org.springframework.security.saml.websso.WebSSOProfileOptions">
                <beans:property
                    name="includeScoping"
                    value="false" />
            </beans:bean>
        </beans:property>
    </beans:bean>

    <!-- Filters for processing of SAML messages -->
    <beans:bean
        id="samlFilter"
        class="org.springframework.security.web.FilterChainProxy">
        <filter-chain-map request-matcher="ant">
            <filter-chain
                pattern="/saml/login/**"
                filters="samlEntryPoint" />
            <filter-chain
                pattern="/saml/logout/**"
                filters="samlLogoutFilter" />
            <filter-chain
                pattern="/saml/metadata/**"
                filters="metadataDisplayFilter" />
            <filter-chain
                pattern="/saml/SSOHoK/**"
                filters="samlWebSSOHoKProcessingFilter" />
            <filter-chain
                pattern="/saml/SSO/**"
                filters="samlWebSSOProcessingFilter" />
            <filter-chain
                pattern="/saml/SingleLogout/**"
                filters="samlLogoutProcessingFilter" />
        </filter-chain-map>
    </beans:bean>

    <!-- SAML Authentication Provider responsible for validating of received SAML messages -->
    <!-- Do not change this bean id. It is used in AcmSamlAuthenticationCheckFilter -->
    <beans:bean
        id="samlAuthenticationProvider"
        class="org.springframework.security.saml.SAMLAuthenticationProvider">
    </beans:bean>
    
    <!-- XML parser pool needed for OpenSAML parsing -->
    <beans:bean
        id="parserPool"
        class="org.opensaml.xml.parse.StaticBasicParserPool"
        init-method="initialize">
        <beans:property name="builderFeatures">
            <beans:map>
                <beans:entry
                    key="http://apache.org/xml/features/dom/defer-node-expansion"
                    value="false" />
            </beans:map>
        </beans:property>
    </beans:bean>

    <beans:bean
        id="parserPoolHolder"
        class="org.springframework.security.saml.parser.ParserPoolHolder" />

    <!-- IDP metadata configuration -->
    <beans:bean
        id="metadata"
        class="org.springframework.security.saml.metadata.CachingMetadataManager">
        <beans:constructor-arg>
            <beans:list>
                <beans:bean class="org.springframework.security.saml.metadata.ExtendedMetadataDelegate">
                    <beans:constructor-arg>
                        <beans:bean class="org.opensaml.saml2.metadata.provider.FilesystemMetadataProvider">
                            <beans:constructor-arg>
                                <beans:value type="java.io.File">${user.home}/.arkcase/acm/sso/idp.xml</beans:value>
                            </beans:constructor-arg>
                            <beans:property
                                name="parserPool"
                                ref="parserPool" />
                        </beans:bean>
                    </beans:constructor-arg>
                    <beans:constructor-arg>
                        <beans:bean class="org.springframework.security.saml.metadata.ExtendedMetadata" />
                    </beans:constructor-arg>
                    <!-- Set this to true when the certificate isn't self-signed or import the server signature certificate to samlKeystore.jks -->
                    <beans:property
                        name="metadataTrustCheck"
                        value="false" />
                </beans:bean>
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>

    <!-- Filter automatically generates default SP metadata -->
    <beans:bean
        id="metadataGeneratorFilter"
        class="org.springframework.security.saml.metadata.MetadataGeneratorFilter">
        <beans:constructor-arg>
            <beans:bean class="org.springframework.security.saml.metadata.MetadataGenerator">
                <beans:property
                    name="entityId"
                    value=" urn:arkcase:armedia:com" />
                <beans:property name="extendedMetadata">
                    <beans:bean class="org.springframework.security.saml.metadata.ExtendedMetadata">
                        <beans:property
                            name="signMetadata"
                            value="false" />
                        <beans:property
                            name="idpDiscoveryEnabled"
                            value="false" />
                    </beans:bean>
                </beans:property>
            </beans:bean>
        </beans:constructor-arg>
    </beans:bean>    
    
    <!-- Override default logout processing filter with the one processing SAML messages -->
    <beans:bean
        id="samlLogoutFilter"
        class="org.springframework.security.saml.SAMLLogoutFilter">
        <beans:constructor-arg
            index="0"
            ref="acmLogoutSuccessHandler" />
        <beans:constructor-arg
            index="1"
            ref="logoutHandler" />
        <beans:constructor-arg
            index="2"
            ref="logoutHandler" />
    </beans:bean>

    <!-- Logout handler terminating local session -->
    <beans:bean
        id="logoutHandler"
        class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler">
        <beans:property
            name="invalidateHttpSession"
            value="true" />
    </beans:bean>

    <!-- The filter is waiting for connections on URL suffixed with filterSuffix and presents SP metadata there -->
    <beans:bean
        id="metadataDisplayFilter"
        class="org.springframework.security.saml.metadata.MetadataDisplayFilter" />

    <!-- Configure HTTP Client to accept certificates from the keystore for HTTPS verification -->
    <beans:bean class="org.springframework.security.saml.trust.httpclient.TLSProtocolConfigurer">
        <beans:property
            name="sslHostnameVerification"
            value="allowAll" />
    </beans:bean>

    <!-- Provider of default SAML Context -->
    <beans:bean
        id="contextProvider"
        class="org.springframework.security.saml.context.SAMLContextProviderImpl" />

    <!-- Processing filter for WebSSO profile messages -->
    <beans:bean
        id="samlWebSSOProcessingFilter"
        class="org.springframework.security.saml.SAMLProcessingFilter">
        <beans:property
            name="authenticationManager"
            ref="acmAuthenticationManager" />
        <beans:property
            name="authenticationSuccessHandler"
            ref="acmLoginSuccessHandler" />
        <beans:property
            name="authenticationFailureHandler"
            ref="failureRedirectHandler" />
        <beans:property
            name="authenticationDetailsSource"
            ref="acmAuthenticationDetailsFactory" />
    </beans:bean>

    <!-- Processing filter for WebSSO Holder-of-Key profile -->
    <beans:bean
        id="samlWebSSOHoKProcessingFilter"
        class="org.springframework.security.saml.SAMLWebSSOHoKProcessingFilter">
        <beans:property
            name="authenticationManager"
            ref="acmAuthenticationManager" />
        <beans:property
            name="authenticationSuccessHandler"
            ref="acmLoginSuccessHandler" />
        <beans:property
            name="authenticationFailureHandler"
            ref="failureRedirectHandler" />
        <beans:property
            name="authenticationDetailsSource"
            ref="acmAuthenticationDetailsFactory" />
    </beans:bean>

    <!-- Handler deciding where to redirect user after failed login -->
    <beans:bean
        id="failureRedirectHandler"
        class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
        <beans:property
            name="useForward"
            value="true" />
        <beans:property
            name="defaultFailureUrl"
            value="/" />
    </beans:bean>

    <!-- Filter processing incoming logout messages -->
    <!-- First argument determines the URL user will be redirected to after successful global logout -->
    <beans:bean
        id="samlLogoutProcessingFilter"
        class="org.springframework.security.saml.SAMLLogoutProcessingFilter">
        <beans:constructor-arg
            index="0"
            ref="acmLogoutSuccessHandler" />
        <beans:constructor-arg
            index="1"
            ref="logoutHandler" />
    </beans:bean>

    <!-- Class loading incoming SAML messages from httpRequest stream -->
    <beans:bean
        id="processor"
        class="org.springframework.security.saml.processor.SAMLProcessorImpl">
        <beans:constructor-arg>
            <beans:list>
                <beans:ref bean="redirectBinding" />
                <beans:ref bean="postBinding" />
                <beans:ref bean="artifactBinding" />
                <beans:ref bean="soapBinding" />
                <beans:ref bean="paosBinding" />
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>

    <!-- SAML 2.0 Holder-of-Key WebSSO Assertion Consumer -->
    <beans:bean
        id="hokWebSSOprofileConsumer"
        class="org.springframework.security.saml.websso.WebSSOProfileConsumerHoKImpl" />

    <!-- SAML 2.0 WebSSO Assertion Consumer -->
    <beans:bean
        id="webSSOprofileConsumer"
        class="org.springframework.security.saml.websso.WebSSOProfileConsumerImpl">
    </beans:bean>

    <!-- SAML 2.0 Holder-of-Key Web SSO profile -->
    <beans:bean
        id="hokWebSSOProfile"
        class="org.springframework.security.saml.websso.WebSSOProfileConsumerHoKImpl" />

    <!-- SAML 2.0 Web SSO profile -->
    <beans:bean
        id="webSSOprofile"
        class="org.springframework.security.saml.websso.WebSSOProfileImpl" />

    <!-- SAML 2.0 Logout Profile -->
    <beans:bean
        id="logoutprofile"
        class="org.springframework.security.saml.websso.SingleLogoutProfileImpl" />

    <!-- Initialization of OpenSAML library -->
    <beans:bean class="org.springframework.security.saml.SAMLBootstrap" />

    <!-- Initialization of the velocity engine -->
    <beans:bean
        id="velocityEngine"
        class="org.springframework.security.saml.util.VelocityFactory"
        factory-method="getEngine" />

    <!-- Logger for SAML messages and events -->
    <beans:bean
        id="samlLogger"
        class="org.springframework.security.saml.log.SAMLDefaultLogger">
        <beans:property
            name="logMessages"
            value="true" />
    </beans:bean>

    <!-- Central storage of cryptographic keys -->
    <beans:bean
        id="keyManager"
        class="org.springframework.security.saml.key.JKSKeyManager">
        <beans:constructor-arg value="file:${user.home}/.arkcase/acm/sso/keystore.jks" />
        <beans:constructor-arg
            type="java.lang.String"
            value="AcMd3v$" />
        <beans:constructor-arg>
            <beans:map>
                <beans:entry
                    key="arkcase.armedia.com"
                    value="AcMd3v$" />
            </beans:map>
        </beans:constructor-arg>
        <beans:constructor-arg
            type="java.lang.String"
            value="arkcase.armedia.com" />
    </beans:bean>

    <!-- Bindings, encoders and decoders used for creating and parsing messages -->
    <beans:bean
        id="postBinding"
        class="org.springframework.security.saml.processor.HTTPPostBinding">
        <beans:constructor-arg ref="parserPool" />
        <beans:constructor-arg ref="velocityEngine" />
    </beans:bean>

    <beans:bean
        id="redirectBinding"
        class="org.springframework.security.saml.processor.HTTPRedirectDeflateBinding">
        <beans:constructor-arg ref="parserPool" />
    </beans:bean>

    <beans:bean
        id="artifactBinding"
        class="org.springframework.security.saml.processor.HTTPArtifactBinding">
        <beans:constructor-arg ref="parserPool" />
        <beans:constructor-arg ref="velocityEngine" />
        <beans:constructor-arg>
            <beans:bean class="org.springframework.security.saml.websso.ArtifactResolutionProfileImpl">
                <beans:constructor-arg>
                    <beans:bean class="org.apache.commons.httpclient.HttpClient">
                        <beans:constructor-arg>
                            <beans:bean class="org.apache.commons.httpclient.MultiThreadedHttpConnectionManager" />
                        </beans:constructor-arg>
                    </beans:bean>
                </beans:constructor-arg>
                <beans:property name="processor">
                    <beans:bean class="org.springframework.security.saml.processor.SAMLProcessorImpl">
                        <beans:constructor-arg ref="soapBinding" />
                    </beans:bean>
                </beans:property>
            </beans:bean>
        </beans:constructor-arg>
    </beans:bean>

    <beans:bean
        id="soapBinding"
        class="org.springframework.security.saml.processor.HTTPSOAP11Binding">
        <beans:constructor-arg ref="parserPool" />
    </beans:bean>

    <beans:bean
        id="paosBinding"
        class="org.springframework.security.saml.processor.HTTPPAOS11Binding">
        <beans:constructor-arg ref="parserPool" />
    </beans:bean>

    <beans:bean id="logoutUrl" class="java.lang.String">
        <beans:constructor-arg value="saml/logout" />
    </beans:bean>

</beans:beans>
